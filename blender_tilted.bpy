
import os
import re
import bpy
import math
from mathutils import Vector

# Delect objects by type
for o in bpy.context.scene.objects:
    if o.type == 'MESH':
        o.select = True
    else:
        o.select = False

# Call the operator only once
bpy.ops.object.delete()


directory = "/home/v2/data/Unknown_Pleasures/tilted/"
files = [{'name': entry } for entry in os.listdir(directory) if re.match("[0-9]+.stl",entry)]
#files = files.filter()
files.append({'name': 'base_box.stl'})
print(files)

#z = map(lambda e : {'name': e}, files)
#print(z)

scale = 0.01
bpy.ops.import_mesh.stl(
	directory=directory,
	files=files,
	filter_glob="[0-9]*.stl", global_scale=scale)

bpy.ops.object.join()

bpy.ops.import_mesh.stl(
	directory=directory,
	files=[{'name': 'intersect2.stl'}],
	filter_glob="[0-9]*.stl", global_scale=scale)

# select all
print('#########################################')
print(bpy.data.objects)
for obj in bpy.context.scene.objects:
	print('yeyeye {} {}'.format(obj.type, obj))
	obj.select = obj.type == "MESH"
	print(' - {}'.format(obj.select))
	#obj.select = obj.type == "EMPTY"
	#obj.select_set(True)

#print(bpy.context.scene.objects.active)
#ob = bpy.context.scene.objects.active
ob = bpy.ops.object
#context = bpy.context
#scene = context.scene
#ob = scene.objects.active # the newly added cylinder.
## set the objects rotation
ob.rotation_euler = (0, math.radians(180), 0)

#ob.location += Vector((-4, -2, .1))


## TODO: tilt by